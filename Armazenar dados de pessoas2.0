#include <stdio.h>
#include <string.h>

#define MAX_PESSOAS 5
#define MAX_NOME 50
#define MAX_RUA 50
#define MAX_ESTADO 50

// Definindo a estrutura para armazenar o endereço de uma pessoa
struct Endereco {
    char rua[MAX_RUA];
    unsigned int numero;
    char estado[MAX_ESTADO];
};

// Definindo a estrutura para armazenar os dados de uma pessoa
struct Pessoa {
    char nome[MAX_NOME];
    unsigned int idade;
    float salario;
    struct Endereco endereco;
};

// Função para inserir uma pessoa no vetor de estruturas
void inserirPessoa(struct Pessoa pessoas[], int *quantidade) {
    if (*quantidade < MAX_PESSOAS) {
        struct Pessoa novaPessoa;
        printf("Digite o nome da pessoa: ");
        scanf(" %[^\n]", novaPessoa.nome); // Lê o nome com espaços em branco
        printf("Digite a idade da pessoa: ");
        scanf("%u", &novaPessoa.idade);
        printf("Digite o salario da pessoa: ");
        scanf("%f", &novaPessoa.salario);
        printf("Digite a rua do endereco da pessoa: ");
        scanf(" %[^\n]", novaPessoa.endereco.rua); // Lê a rua com espaços em branco
        printf("Digite o numero do endereco da pessoa: ");
        scanf("%u", &novaPessoa.endereco.numero);
        printf("Digite o estado do endereco da pessoa: ");
        scanf(" %[^\n]", novaPessoa.endereco.estado); // Lê o estado com espaços em branco

        pessoas[*quantidade] = novaPessoa;
        (*quantidade)++;
        printf("Pessoa inserida com sucesso!\n");
    } else {
        printf("Espaco insuficiente\n");
    }
}

// Função para mostrar os dados de uma pessoa pelo nome
void mostrarPessoa(struct Pessoa pessoas[], int quantidade, char nome[]) {
    int encontrado = 0;
    for (int i = 0; i < quantidade; i++) {
        if (strcmp(pessoas[i].nome, nome) == 0) {
            printf("Nome: %s\n", pessoas[i].nome);
            printf("Idade: %u\n", pessoas[i].idade);
            printf("Salario: %.2f\n", pessoas[i].salario);
            printf("Endereco:\n");
            printf("  Rua: %s\n", pessoas[i].endereco.rua);
            printf("  Numero: %u\n", pessoas[i].endereco.numero);
            printf("  Estado: %s\n", pessoas[i].endereco.estado);
            encontrado = 1;
            break;
        }
    }
    if (!encontrado) {
        printf("Registro ausente\n");
    }
}

// Função para alterar os dados de uma pessoa pelo nome
void alterarPessoa(struct Pessoa pessoas[], int quantidade, char nome[]) {
    int encontrado = 0;
    for (int i = 0; i < quantidade; i++) {
        if (strcmp(pessoas[i].nome, nome) == 0) {
            printf("Digite o novo nome da pessoa: ");
            scanf(" %[^\n]", pessoas[i].nome); // Lê o nome com espaços em branco
            printf("Digite a nova idade da pessoa: ");
            scanf("%u", &pessoas[i].idade);
            printf("Digite o novo salario da pessoa: ");
            scanf("%f", &pessoas[i].salario);
            printf("Digite a nova rua do endereco da pessoa: ");
            scanf(" %[^\n]", pessoas[i].endereco.rua); // Lê a rua com espaços em branco
            printf("Digite o novo numero do endereco da pessoa: ");
            scanf("%u", &pessoas[i].endereco.numero);
            printf("Digite o novo estado do endereco da pessoa: ");
            scanf(" %[^\n]", pessoas[i].endereco.estado); // Lê o estado com espaços em branco
            printf("Dados alterados com sucesso!\n");
            encontrado = 1;
            break;
        }
    }
    if (!encontrado) {
        printf("Registro ausente para alteracao\n");
    }
}

int main() {
    struct Pessoa pessoas[MAX_PESSOAS];
    int quantidade = 0;
    int opcao;
    char nomePesquisa[MAX_NOME];

    do {
        printf("\nEscolha uma opcao:\n");
        printf("1. Inserir pessoa\n");
        printf("2. Mostrar dados de uma pessoa\n");
        printf("3. Alterar dados de uma pessoa\n");
        printf("4. Sair\n");
        printf("Opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                inserirPessoa(pessoas, &quantidade);
                break;
            case 2:
                printf("Digite o nome da pessoa que deseja buscar: ");
                scanf(" %[^\n]", nomePesquisa); // Lê o nome com espaços em branco
                mostrarPessoa(pessoas, quantidade, nomePesquisa);
                break;
            case 3:
                printf("Digite o nome da pessoa que deseja alterar: ");
                scanf(" %[^\n]", nomePesquisa); // Lê o nome com espaços em branco
                alterarPessoa(pessoas, quantidade, nomePesquisa);
                break;
            case 4:
                printf("Saindo...\n");
                break;
            default:
                printf("Opcao invalida. Tente novamente.\n");
        }
    } while (opcao != 4);

    return 0;
}
